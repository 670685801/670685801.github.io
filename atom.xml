<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-07-07T01:10:00.365Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>jQuery笔记</title>
    <link href="http://yoursite.com/2020/07/07/jQuery%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/07/07/jQuery%E7%AC%94%E8%AE%B0/</id>
    <published>2020-07-07T12:56:05.048Z</published>
    <updated>2020-07-07T01:10:00.365Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为什么要学jQuery"><a href="#为什么要学jQuery" class="headerlink" title="为什么要学jQuery"></a>为什么要学jQuery</h2><p>使用javascript开发过程中，有许多的缺点：</p><ol><li>查找元素的方法单一，麻烦。</li><li>遍历数组很麻烦，通常要嵌套一大堆的for循环。</li><li>有兼容性问题。</li><li>想要实现简单的动画效果，也很麻烦</li><li>代码冗余</li></ol><h2 id="jQuery到底是什么"><a href="#jQuery到底是什么" class="headerlink" title="jQuery到底是什么"></a>jQuery到底是什么</h2><blockquote><p>jQuery的官网 <a href="http://jQuery.com/" target="_blank" rel="noopener">http://jQuery.com/</a><br>jQuery就是一个js库，使用jQuery的话，会比使用JavaScript更简单。</p></blockquote><p>js库：把一些常用到的方法写到一个单独的js文件，使用的时候直接去引用这js文件就可以了。<br>（animate.js、common.js）</p><p>我们知道了，jQuery其实就是一个js文件，里面封装了一大堆的方法方便我们的开发，<br>其实就是一个加强版的common.js，因此我们学习jQuery，其实就是学习jQuery这个js文件中封装的一大堆方法。</p><h2 id="jQuery的版本问题"><a href="#jQuery的版本问题" class="headerlink" title="jQuery的版本问题"></a>jQuery的版本问题</h2><blockquote><p>官网下载地址：<a href="http://jQuery.com/download/" target="_blank" rel="noopener">http://jQuery.com/download/</a></p><p>第三方下载地址：<a href="http://www.jq22.com/jquery-info122" target="_blank" rel="noopener">http://www.jq22.com/jquery-info122</a></p><p>jQuery版本有很多，分为1.x 2.x 3.x<br>1.x和2.x版本jQuery都不再更新版本了，现在只更新3.x版本。</p></blockquote><p>大版本分类：</p><ul><li>1.x版本：能够兼容IE678浏览器</li><li>2.x版本：不能兼容IE678浏览器</li><li>3.x版本：不能兼容IE678浏览器，更加的精简（在国内不流行，因为国内使用jQuery的主要目的就是兼容IE678）</li></ul><p>关于压缩版和未压缩版：</p><ul><li>jQuery-1.12.4.min.js:压缩版本，适用于生产环境，因为文件比较小，去除了注释、换行、空格等东西，但是基本没有颗阅读性。</li><li>jQuery-1.12.4.js:未压缩版本，适用于学习与开发环境，源码清晰，易阅读。</li></ul><p>引入方式</p><ul><li>本地引入：下载相应版本的jQuery的js文件，通过绝对路径或相对路径引入</li><li>cdn引入：找到相应版本的jQuery的cdn，将其复制到要使用的地方即可<ul><li>使用CDN引用的一个好处：许多用户在访问其他站点时，已经从百度、又拍云、新浪、谷歌或微软等网站加载过 jQuery。所有结果是，当他们访问您的站点时，会从缓存中加载 jQuery，这样可以减少加载时间。同时，大多数 CDN 都可以确保当用户向其请求文件时，会从离用户最近的服务器上返回响应，这样也可以提高加载速度。</li></ul></li></ul><h2 id="script放在head和body中的区别"><a href="#script放在head和body中的区别" class="headerlink" title="script放在head和body中的区别"></a>script放在head和body中的区别</h2><p>放在body中：在页面加载的时候被执行</p><p>放在head中：在被调用时被执行</p><p>原因：</p><p>1、浏览器是从上到下解析HTML的。 </p><p>2、放在head里的js代码，会在body解析之前被解析；放在body里的js代码，会在整个页面加载完成之后解析。</p><p>js应该放哪：</p><p>1、head中：需调用才执行或事件触发执行的脚本，可以保证脚本在调用之前被加载</p><p>2、body中：当页面被加载时执行的脚本，通常被用来生成页面内容</p><h2 id="jQuery在线文档"><a href="#jQuery在线文档" class="headerlink" title="jQuery在线文档"></a>jQuery在线文档</h2><p>1.<a href="http://hemin.cn/jq/" target="_blank" rel="noopener">http://hemin.cn/jq/</a></p><p>2.<a href="https://jquery.cuishifeng.cn" target="_blank" rel="noopener">https://jquery.cuishifeng.cn</a></p><h2 id="体验jQuery的使用"><a href="#体验jQuery的使用" class="headerlink" title="体验jQuery的使用"></a>体验jQuery的使用</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 1. 查找元素的方法多种多样，非常灵活</span></span><br><span class="line"><span class="comment">* 2. 拥有隐式迭代特性，因此不再需要手写for循环了。</span></span><br><span class="line"><span class="comment">* 3. 完全没有兼容性问题。</span></span><br><span class="line"><span class="comment">* 4. 实现动画非常简单，而且功能更加的强大。</span></span><br><span class="line"><span class="comment">* 5. 代码简单、粗暴。</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">"#btn1"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">"div"</span>).show(<span class="number">200</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    $(<span class="string">"#btn2"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">"div"</span>).text(<span class="string">"我是内容"</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="jQuery的入口函数"><a href="#jQuery的入口函数" class="headerlink" title="jQuery的入口函数"></a>jQuery的入口函数</h2><p>使用jQuery的三个步骤：</p><ol><li>引入jQuery文件</li><li>入口函数</li><li>功能实现</li></ol><p>关于jQuery的入口函数：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//第一种写法</span></span><br><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//第二种写法</span></span><br><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>jQuery入口函数与js入口函数的对比：</p><ol><li>JavaScript的入口函数要等到页面中所有资源（包括图片、文件）加载完成才开始执行。</li><li>jQuery的入口函数只会等待文档树加载完成就开始执行，并不会等待图片、文件的加载。</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="comment">//1.$是什么?</span></span><br><span class="line">  <span class="comment">//如果报了这个错误:$ is not defined,就说明没有引入jQuery文件.</span></span><br><span class="line">  <span class="comment">// $(function () &#123;</span></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  <span class="comment">// &#125;);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">//2.jQuery文件结构.</span></span><br><span class="line">  <span class="comment">//其实是一个自执行函数.</span></span><br><span class="line">  <span class="comment">// (function()&#123;</span></span><br><span class="line">  <span class="comment">//   window.jQuery = window.$ = jQuery;</span></span><br><span class="line">  <span class="comment">// &#125;());</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">//3.</span></span><br><span class="line">  <span class="comment">//a.引入一个js文件,是会执行这js文件中的代码的.</span></span><br><span class="line">  <span class="comment">//console.log(num);//10</span></span><br><span class="line">  <span class="comment">//b.jQuery文件是一个自执行函数,执行这个jQuery文件中的代码,其实就是执行这个自执行函数.</span></span><br><span class="line">  <span class="comment">//c.这个自执行文件就是给window对象添加一个jQuery属性和$属性.</span></span><br><span class="line">  <span class="comment">//console.log(window);</span></span><br><span class="line">  <span class="comment">//d.$其实和jQuery是等价的,是一个函数.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// console.log(window.jQuery === window.$);//true</span></span><br><span class="line">  <span class="comment">// console.log(Object.prototype.toString.call($));//'[object Function]'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">//4.$是一个函数</span></span><br><span class="line">  <span class="comment">//参数传递不同,效果也不一样.</span></span><br><span class="line">  <span class="comment">//4.1 如果参数传递的是一个匿名函数-入口函数</span></span><br><span class="line">  <span class="comment">// $(function()&#123;</span></span><br><span class="line">  <span class="comment">// &#125;);</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//4.2 如果参数传递的是一个字符串-选择器/创建一个标签</span></span><br><span class="line">  <span class="comment">//$('#one');</span></span><br><span class="line">  <span class="comment">//$('&lt;div&gt;啦啦,我是一个div&lt;/div&gt;');</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//4.3 如果参数是一个dom对象,那他就会把dom对象转换成jQuery对象.</span></span><br><span class="line">  <span class="comment">//$(dom对象);</span></span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="jq对象和dom对象-重要"><a href="#jq对象和dom对象-重要" class="headerlink" title="jq对象和dom对象(重要)"></a>jq对象和dom对象(重要)</h2><ol><li>DOM对象：使用JavaScript中的方法获取页面中的元素返回的对象就是dom对象。</li><li>jQuery对象：jquery对象就是使用jquery的方法获取页面中的元素返回的对象就是jQuery对象。</li><li>jQuery对象其实就是DOM对象的包装集包装了DOM对象的集合（伪数组）</li><li>DOM对象与jQuery对象的方法不能混用。</li></ol><p>DOM对象转换成jQuery对象：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> $obj = $(domObj);</span><br><span class="line"><span class="comment">// $(document).ready(function()&#123;&#125;);就是典型的DOM对象转jQuery对象</span></span><br></pre></td></tr></table></figure><p>jQuery对象转换成DOM对象：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> $li = $(<span class="string">"li"</span>);</span><br><span class="line"><span class="comment">//第一种方法（推荐使用）</span></span><br><span class="line">$li[<span class="number">0</span>]</span><br><span class="line"><span class="comment">//第二种方法</span></span><br><span class="line">$li.get(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><h2 id="jquery选择器"><a href="#jquery选择器" class="headerlink" title="jquery选择器"></a>jquery选择器</h2><h3 id="什么是jQuery选择器"><a href="#什么是jQuery选择器" class="headerlink" title="什么是jQuery选择器"></a>什么是jQuery选择器</h3><ul><li>jQuery选择器是jQuery为我们提供的一组方法，让我们更加方便的获取到页面中的元素。<br>注意：jQuery选择器返回的是jQuery对象。</li><li>jQuery选择器有很多，基本兼容了CSS1到CSS3所有的选择器，并且jQuery还添加了很多扩展性的选择器。<br>【查看jQuery文档】</li><li>jQuery选择器虽然很多，但是选择器之间可以相互替代，就是说获取一个元素，你会有很多种方法获取到。<br>所以我们平时真正能用到的只是少数的最常用的选择器。</li></ul><h3 id="基本选择器"><a href="#基本选择器" class="headerlink" title="基本选择器"></a>基本选择器</h3><table><thead><tr><th align="center">名称</th><th align="center">用法</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">ID选择器</td><td align="center">$(“#id”);</td><td align="center">获取指定ID的元素</td></tr><tr><td align="center">类选择器</td><td align="center">$(“.class”);</td><td align="center">获取同一类class的元素</td></tr><tr><td align="center">标签选择器</td><td align="center">$(“div”);</td><td align="center">获取同一类标签的所有元素</td></tr><tr><td align="center">并集选择器</td><td align="center">$(“div,p,li”);</td><td align="center">使用逗号分隔，只要符合条件之一就可。</td></tr><tr><td align="center">交集选择器</td><td align="center">$(“div.redClass”);</td><td align="center">获取class为redClass的div元素</td></tr></tbody></table><blockquote><p>总结：跟css的选择器用法一模一样。</p></blockquote><h3 id="过滤选择器"><a href="#过滤选择器" class="headerlink" title="过滤选择器"></a>过滤选择器</h3><table><thead><tr><th align="center"><strong>名称</strong></th><th align="center"><strong>用法</strong></th><th align="center"><strong>描述</strong></th></tr></thead><tbody><tr><td align="center">:eq（index）</td><td align="center">$(“li:eq(2)”).css(“color”, ”red”);</td><td align="center">获取到的li元素中，选择索引号为2的元素，索引号index从0开始。</td></tr><tr><td align="center">:odd</td><td align="center">$(“li:odd”).css(“color”, ”red”);</td><td align="center">获取到的li元素中，选择索引号为奇数的元素</td></tr><tr><td align="center">:even</td><td align="center">$(“li:even”).css(“color”, ”red”);</td><td align="center">获取到的li元素中，选择索引号为偶数的元素</td></tr></tbody></table><blockquote><p>总结：这类选择器都带冒号</p></blockquote><h3 id="筛选选择器-方法"><a href="#筛选选择器-方法" class="headerlink" title="筛选选择器(方法)"></a>筛选选择器(方法)</h3><table><thead><tr><th align="center"><strong>名称</strong></th><th align="center"><strong>用法</strong></th><th align="center"><strong>描述</strong></th></tr></thead><tbody><tr><td align="center">children(selector)</td><td align="center">$(“ul”).children(“li”)</td><td align="center">相当于$(“ul&gt;li”)，子类选择器</td></tr><tr><td align="center">find(selector)</td><td align="center">$(“ul”).find(“li”);</td><td align="center">相当于$(“ul li”),后代选择器</td></tr><tr><td align="center">siblings(selector)</td><td align="center">$(“#first”).siblings(“li”);</td><td align="center">查找兄弟节点，不包括自己本身。</td></tr><tr><td align="center">parent()</td><td align="center">$(“#first”).parent();</td><td align="center">查找父亲</td></tr><tr><td align="center">eq(index)</td><td align="center">$(“li”).eq(2);</td><td align="center">相当于$(“li:eq(2)”),index从0开始</td></tr><tr><td align="center">next()</td><td align="center">$(“li”).next()</td><td align="center">找下一个兄弟</td></tr><tr><td align="center">prev()</td><td align="center">$(“li”).prev()</td><td align="center">找上一次兄弟</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;为什么要学jQuery&quot;&gt;&lt;a href=&quot;#为什么要学jQuery&quot; class=&quot;headerlink&quot; title=&quot;为什么要学jQuery&quot;&gt;&lt;/a&gt;为什么要学jQuery&lt;/h2&gt;&lt;p&gt;使用javascript开发过程中，有许多的缺点：&lt;/p&gt;
&lt;ol&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>小米平板2删除温控</title>
    <link href="http://yoursite.com/2020/07/07/%E5%B0%8F%E7%B1%B3%E5%B9%B3%E6%9D%BF2%E5%88%A0%E9%99%A4%E6%B8%A9%E6%8E%A7/"/>
    <id>http://yoursite.com/2020/07/07/%E5%B0%8F%E7%B1%B3%E5%B9%B3%E6%9D%BF2%E5%88%A0%E9%99%A4%E6%B8%A9%E6%8E%A7/</id>
    <published>2020-07-07T10:44:14.579Z</published>
    <updated>2020-07-07T12:50:01.995Z</updated>
    
    <content type="html"><![CDATA[<h1 id="小米平板2删除温控"><a href="#小米平板2删除温控" class="headerlink" title="小米平板2删除温控"></a>小米平板2删除温控</h1><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ol><li>温控删除以后，平板待机温度会上升，最好改过散热以后在进行</li><li>自己测试温控删除后会对于充电速度有一定影响<h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2></li><li>右键–&gt;此电脑–&gt;管理<br><img src="https://img-blog.csdnimg.cn/20200628163907925.png" alt="在这里插入图片描述"><ol start="2"><li>打开管理，选择设备管理器–&gt;系统设备<br><img src="https://img-blog.csdnimg.cn/20200628164016859.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNTcyODg3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>删除这个，最主要的温控驱动，<br><img src="https://img-blog.csdnimg.cn/20200628164503725.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNTcyODg3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><h2 id="注意：当然这就完成了温控删除，但是一旦重启设备就会恢复，所以可以选择如下方法之一"><a href="#注意：当然这就完成了温控删除，但是一旦重启设备就会恢复，所以可以选择如下方法之一" class="headerlink" title="注意：当然这就完成了温控删除，但是一旦重启设备就会恢复，所以可以选择如下方法之一"></a>注意：当然这就完成了温控删除，但是一旦重启设备就会恢复，所以可以选择如下方法之一</h2></li><li>设定平板为休眠状态，每次不关机，只休眠</li><li>把WiFi设置成按流量计费的网络</li><li>刷bios进行温度抢改动 </li></ol></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;小米平板2删除温控&quot;&gt;&lt;a href=&quot;#小米平板2删除温控&quot; class=&quot;headerlink&quot; title=&quot;小米平板2删除温控&quot;&gt;&lt;/a&gt;小米平板2删除温控&lt;/h1&gt;&lt;h2 id=&quot;注意&quot;&gt;&lt;a href=&quot;#注意&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
